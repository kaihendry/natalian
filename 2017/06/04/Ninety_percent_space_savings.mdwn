[[!meta title="Ninety two percent space savings"]]
[[!meta description="Finding ffmpegs re-encoding can result in remarkable space savings, but what is lost?"]]


Using my script
[htmlvideo](https://github.com/kaihendry/recordmydesktop2.0/blob/master/htmlvideo)
around the amazing [ffmpeg project's binary](https://ffmpeg.org/):

[Original video from my Canon G7X
MKII](https://s.natalian.org/2017-06-04/MVI_4827.MP4) - unplayable from the Web
since the [moov atom that defines the timescale, duration, display
characteristics of the video, is not at the beginning of the
file](http://www.adobe.com/devnet/video/articles/mp4_movie_atom.html).

[input ffprobe](https://s.natalian.org/2017-06-04/input.txt)

<amp-video poster=https://s.natalian.org/2017-10-06/poster.jpg
width=1920 height=1080 layout="responsive" src=https://s.natalian.org/2017-06-04/MVI_4827.mp4 controls></amp-video>
[output ffprobe](https://s.natalian.org/2017-06-04/output.txt)

<amp-img layout="responsive" width=2560 height=1440 src=https://s.natalian.org/2017-06-04/diff.png alt="vimdiff"></amp-img>

bitrate: 35115 kb/s &rarr; bitrate: 3037 kb/s, using the default Constant Rate
Factor of 23. Additionally `-crf 20 -preset veryslow -tune film` might make
sense for archiving camera encoded video footage.

[htmlvideo.log](https://s.natalian.org/2017-06-04/htmlvideo.log)
